diff --git a/src/heap/heap.cc b/src/heap/heap.cc
index 65526f748c..04de6ea6b6 100644
--- a/src/heap/heap.cc
+++ b/src/heap/heap.cc
@@ -1716,6 +1716,12 @@ void Heap::Scavenge() {
   IncrementalMarking::PauseBlackAllocationScope pause_black_allocation(
       incremental_marking());
 
+  if (mark_compact_collector()->sweeper().sweeping_in_progress() &&
+      memory_allocator_->unmapper()->NumberOfDelayedChunks() >
+          kMaxSemiSpaceSizeInKB / Page::kPageSize) {
+    mark_compact_collector()->EnsureSweepingCompleted();
+  }
+
   mark_compact_collector()->sweeper().EnsureNewSpaceCompleted();
 
   SetGCState(SCAVENGE);
diff --git a/src/heap/spaces.h b/src/heap/spaces.h
index 2ae089b401..c9be48bb3a 100644
--- a/src/heap/spaces.h
+++ b/src/heap/spaces.h
@@ -1226,6 +1226,11 @@ class V8_EXPORT_PRIVATE MemoryAllocator {
 
     bool has_delayed_chunks() { return delayed_regular_chunks_.size() > 0; }
 
+    int NumberOfDelayedChunks() {
+      base::LockGuard<base::Mutex> guard(&mutex_);
+      return static_cast<int>(delayed_regular_chunks_.size());
+    }
+
    private:
     static const int kReservedQueueingSlots = 64;
     static const int kMaxUnmapperTasks = 24;
